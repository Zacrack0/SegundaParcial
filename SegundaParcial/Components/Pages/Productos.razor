@page "/productos"
@rendermode InteractiveServer

<h1>Productos</h1>

 <EditForm Model="_producto" OnValidSubmit="AddProducto" FormName="frmProducto">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="col-7">
        <label class="col-form-label">Inventario:</label>
        <input type="text" class="form-control" @bind-value="_producto.Inventario" />
        <ValidationMessage For="@(() => _producto.Inventario)" />
    </div>

    <div class="col-7">
        <label class="col-form-label">Nombre:</label>
        <input type="text" class="form-control" @bind-value="_producto.Nombre" />
        <ValidationMessage For="@(() => _producto.Nombre)" />
    </div>

    <div class="col-7">
        <label class="col-form-label">Departamento:</label>
        <div>
            <input type="text" id="departamento" name="departamento" @bind-value="_producto.Departamento" class="form-control" />
            <ValidationMessage For="@(() => _producto.Departamento)" />
        </div>
    </div>


    <br />
    <div>
        <button class="btn btn-primary" type="submit">Guardar</button>
        @if (_isEditMode)
        {
            <button type="button" class="btn btn-success" @onclick="ActualizarProducto">Actualizar</button>
            <button type="button" class="btn btn-warning" @onclick="CancelarEdicion">Cancelar</button>
        }
        <br />
        <br />
        <br />
        @if (!string.IsNullOrEmpty(_errorMessage))
        {
            <div class="alert alert-danger">@_errorMessage</div>
        }
    </div>
    <br />
    
</EditForm>
<button @onclick="MostrarTabla" class="btn btn-secondary">Existencias</button>

@if (mostrar)
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Frutas</th>
                <th>Verduras</th>
                <th>Lácteos</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@ContarProductosPorDepartamento("Frutas")</td>
                <td>@ContarProductosPorDepartamento("Verduras")</td>
                <td>@ContarProductosPorDepartamento("Lácteos")</td>
            </tr>
        </tbody>
    </table>
}

<table class="table table-hover">
    <thead>
        <tr>
            <th>Inventario</th>
            <th>Nombre</th>
            <th>Departamento</th>
            <th>Acciones</th>
        </tr>
    </thead> 
    <tbody>
        @foreach (var producto in _listaProductos)
        {
            <tr>
                <td>@producto.Inventario</td>
             <td>@producto.Nombre</td>
                <td>@producto.Departamento</td>
                <td>
                    <button type="button" class="btn btn-danger" @onclick="() => EliminarProducto(producto)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                            <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                        </svg>
                    </button>
                    <button type="button"class="btn btn-info" @onclick="() => EditarProducto(producto)">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                        <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                        <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                    </svg>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
       

@code {
    private List<Producto> _listaProductos = new List<Producto>();
    private Producto _producto = new();
    private string _errorMessage = "";
    private bool _isEditMode = false;
    private Producto? _productoEditando;
    
    private bool mostrar = false;

    private void MostrarTabla()
    {
        mostrar = true;
    }

    public int ContarProductosPorDepartamento(string departamento)
    {
        return _listaProductos.Count(p => p.Departamento == departamento);
    }

    private void AddProducto()
{
    _errorMessage = "";
    if (_listaProductos.Any(p => p.Inventario == _producto.Inventario))
    {
        _errorMessage = "El número de inventario ya existe.";
        return;
    }
    _listaProductos.Add(_producto);
    _producto = new Producto();
}

    private void EliminarProducto(Producto producto)
    {
        _listaProductos.Remove(producto);
    }

    private void EditarProducto(Producto producto)
    {
        _productoEditando = producto;
        _producto = new Producto
            {
                Inventario = producto.Inventario,
                Nombre = producto.Nombre,
                Departamento = producto.Departamento
            };
        _isEditMode = true;
    }

    private void ActualizarProducto()
    {
        _productoEditando.Inventario = _producto.Inventario;
        _productoEditando.Nombre = _producto.Nombre;
        _productoEditando.Departamento = _producto.Departamento;
        _producto = new Producto();
        _isEditMode = false;
    }

    private void CancelarEdicion()
    {
        _producto = new Producto();
        _isEditMode = false;
    }
}
}
